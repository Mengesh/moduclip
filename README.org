* ModuClip - ModuGen Polygon Clipper

** About

ModuClip is an API for [[file:polyclipper.py][PolyClipper]] - a 3D polygon clipping module.

Only clipping by plane is supported.

*** Constraints

Polygon:

- must be convex (see note)
- must lie in XY plane


Plane

- must be perpendicular to the polygon (see note)


Note: PolyClipper does not require polygon convexity nor polygon-plane orthogonality. 
Both constraints are implemented only inside API for the completeness of the coding challenge.

** Quickstart

Install dependencies:
#+begin_src bash
pip install -r requirements.txt
#+end_src

or for development:
#+begin_src bash
pip install -r requirements-dev.txt
#+end_src

Run the live server
#+begin_src bash
uvicorn moduclip:app --reload
#+end_src

Access interactive API docs: http://localhost:8000/docs

Run tests:
#+begin_src bash
pytest -k "not visual" 
#+end_src

or with clipping visualisations generated by ~trimesh.viewer~:
#+begin_src bash
pytest
#+end_src

Check API docs or [[file:test_moduclip.py][~test_moduclip.py~]] for API request body examples.

*** Deployment using Docker

Build image:
#+begin_src bash
docker build -t <image_name> .
#+end_src

Create container:
#+begin_src bash
docker run -d --name <container_name> -p 8089:80 <image_name>
#+end_src

Access OpenAPI at http://localhost:8089/docs

** Dependencies

PolyClipper depends on geometry processing libraries:

- [[https://trimsh.org/index.html][trimesh]] (polygon clipping)
- [[https://shapely.readthedocs.io/en/stable/][shapely]] (polygon convexity check)
- [[https://docs.pydantic.dev/][pydantic]] (data validation)


ModuClip is built with [[https://fastapi.tiangolo.com/][FastAPI]].

Both PolyClipper and ModuClip rely on polygon and plane classes defined in [[file:models.py][~models.py~]]

** Models

Polygon and Plane classes are designed to be used seamlessly with js geometry processing libraries like
[[https://threejs.org/][three]] and [[https://www.babylonjs.com/][babylon]].

Check [[file:test_polyclipper.py][~test_polyclipper.py~]] for polygon and plane instance creation examples.
